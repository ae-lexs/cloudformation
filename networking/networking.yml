AWSTemplateFormatVersion: 2010-09-09
Description: Creates the basic Networking components.
Parameters:
  ProjectName:
    Type: String
    Description: Project Name
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_vpc'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_internet_gateway'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  InboundInternetAccessRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags:
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_inbound_internet_access_route_table'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
      VpcId: !Ref VPC

  InternetGatewayRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref InboundInternetAccessRouteTable

  OutboundInternetAccessRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags:
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_outbound_internet_access_route_table'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
      VpcId: !Ref VPC

  NatGatewayElasticIP:
    Type: AWS::EC2::EIP
    Properties: 
      Domain: 'vpc'
      Tags:
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_nat_gateway_elastic_ip'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      CidrBlock: 10.0.0.0/24
      EnableDns64: false
      MapPublicIpOnLaunch: true
      Tags:
        - Key: InternetAccess
          Value: Inbound
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_public_subnet_a'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
        - Key: SubnetType
          Value: Public
      VpcId: !Ref VPC

  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref InboundInternetAccessRouteTable
      SubnetId: !Ref PublicSubnetA

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 1
        - !GetAZs 
          Ref: AWS::Region
      CidrBlock: 10.0.1.0/24
      EnableDns64: false
      MapPublicIpOnLaunch: true
      Tags:
        - Key: InternetAccess
          Value: Inbound
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_public_subnet_b'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
        - Key: SubnetType
          Value: Public
      VpcId: !Ref VPC

  PublicSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref InboundInternetAccessRouteTable
      SubnetId: !Ref PublicSubnetB

  OutboundNatGateway:
    Type: AWS::EC2::NatGateway
    Properties: 
      AllocationId: !GetAtt NatGatewayElasticIP.AllocationId
      Tags:
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_outbound_nat_gateway'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
      SubnetId: !Ref PublicSubnetB

  NatGatewayRoute:
    Type: AWS::EC2::Route
    Properties: 
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref OutboundNatGateway
      RouteTableId: !Ref OutboundInternetAccessRouteTable

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 0
        - !GetAZs 
          Ref: AWS::Region
      CidrBlock: 10.0.2.0/24
      EnableDns64: false
      MapPublicIpOnLaunch: false
      Tags:
        - Key: InternetAccess
          Value: Private
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_private_subnet_a'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
        - Key: SubnetType
          Value: Private
      VpcId: !Ref VPC

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select 
        - 1
        - !GetAZs 
          Ref: AWS::Region
      CidrBlock: 10.0.3.0/24
      EnableDns64: false
      MapPublicIpOnLaunch: false
      Tags:
        - Key: InternetAccess
          Value: Outbound
        - Key: Name
          Value: !Sub 
            - '${ProjectName}_private_subnet_b'
            - ProjectName: !Ref ProjectName
        - Key: Project
          Value: !Ref ProjectName
        - Key: SubnetType
          Value: Private
      VpcId: !Ref VPC

  PrivateSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref OutboundInternetAccessRouteTable
      SubnetId: !Ref PrivateSubnetB
